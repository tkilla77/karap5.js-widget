(()=>{Error,Error;class t{static fromXy(r,e){return new t(r,e)}static fromCopy(r){return new t(r.x,r.y)}constructor(t,r){this.x=t,this.y=r}add(r){return t.fromXy(this.x+r.x,this.y+r.y)}move(t){return t.apply(this)}toString(){return`[${this.x}, ${this.y}]`}}class r{constructor(r,e,s,n){this.name=r,this.coords=t.fromXy(e,s),this.angle=n}apply(t){return t.add(this.coords)}toString(){return this.name}}!function(){let t=new r("↑",0,-1,0),e=new r("↓",0,1,Math.PI),s=new r("→",1,0,Math.PI/2),n=new r("←",-1,0,-Math.PI/2);t.left=n,t.right=s,n.left=e,n.right=t,e.left=s,e.right=n,s.left=t,s.right=e,Object.freeze({UP:t,DOWN:e,RIGHT:s,LEFT:n})}();class e{static fromString(t){switch(t){case" ":case"_":return s.EMPTY;case"T":case"🌳":return s.TREE;case"B":case"🐞":return s.BUG;case"M":case"🍄":return s.MUSHROOM;case"C":case"🍀":return s.CLOVER;default:return new e(t,t)}}constructor(t="?",r=EMPTY){this.display=t,this.type=r}draw(t,r){text(this.display,t,r)}toString(){return this.type}}const s=Object.freeze({EMPTY:new e(" ","_"),TREE:new e("🌳","T"),BUG:new e("🐞","B"),MUSHROOM:new e("🍄","M"),CLOVER:new e("🍀","C")})})();
//# sourceMappingURL=main.js.map